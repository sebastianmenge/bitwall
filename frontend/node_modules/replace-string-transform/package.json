{
  "name": "replace-string-transform",
  "description": "A transform stream that replaces strings in a file with regular expression support.",
  "version": "0.1.0",
  "author": {
    "name": "Rotunda Software",
    "email": "support@rotundasoftware.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rotundasoftware/replace-string-transform.git"
  },
  "bugs": {
    "url": "https://github.com/rotundasoftware/replace-string-transform/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/rotundasoftware/replace-string-transform/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "keywords": [
    "asset",
    "cartero",
    "parceify",
    "browserify",
    "transform"
  ],
  "devDependencies": {
    "tape": "~2.3.2"
  },
  "dependencies": {
    "through": "~2.3.4"
  },
  "readme": "A transform that replaces strings in a file using a regular expression. Just like `string.replace` but with streams. Desiged for use with [browserify](https://github.com/substack/node-browserify) / [parcelify](https://github.com/rotundasoftware/parcelify).\n\n### stream = replaceStringTransform( file, options );\n\nThere are two required options:\n\n* `find` - The string or regular expression to find.\n* `replace` - The string to replace `find` with. May also be a function that returns a string. The signature of the function should be the same as the signature of the a function passed as the second argument to [String.prototype.replace](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace), except for with additional `file` argument.\n\nExample:\n\n`before.txt` is:\n\n```\nflip\n```\n\nWe run it through the transform.\n\n```javascript\nvar t = require( 'replace-string-transform' );\n\nfs.createReadStream( 'before.txt' )\n\t.pipe( t( file, {\n\t\tfind : /f(\\w{0,2})p/,\n\t\treplace : function( file, match, middle ) {\n\t\t\treturn 'f' + (middle === 'li' ? 'lo' : 'li') + 'p';\n\t\t}\n\t} )\n\t.pipe( fs.createWriteStream( 'after.txt' ) );\n```\n\nNow `after.txt` is:\n\n```\nflop\n```\n\n## License\n\nMIT",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/rotundasoftware/replace-string-transform",
  "_id": "replace-string-transform@0.1.0",
  "_shasum": "1c2a629e34031813ba36407d25fa544f83152432",
  "_from": "replace-string-transform@^0.1.0",
  "_resolved": "https://registry.npmjs.org/replace-string-transform/-/replace-string-transform-0.1.0.tgz"
}
